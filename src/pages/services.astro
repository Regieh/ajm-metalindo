---
import SubHeroSection from "@/components/sections/landing/SubHeroSection.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { SITE } from "@data/constants";
import bg1 from "@images/services.png";
import showroom1Image from "@images/services/services-sh-1.png";
import showroom2Image from "@images/services/services-sh-2.png";
import exterior2Image from "@images/services/exterior-1.jpeg";
import exterior1Image from "@images/services/exterior-2.jpeg";
import { Image } from "astro:assets";
import GiveHelp from "@/components/sections/landing/GiveHelp.astro";
import racksliding from "@images/racksliding.jpeg";
import boothdisplay from "@images/boothdisplay.jpeg";
import interior from "@images/interior.jpeg";
import acrylicdigitalprinting from "@images/acrylicdigitalprinting.jpeg";

const pageTitle: string = `About | ${SITE.title}`;

const services = [
  {
    title: "Booth & Display",
    description: "Kami menciptakan Booth dan Display kustom untuk membuat merek Anda menonjol di acara dan pameran.",
    image: boothdisplay,
    alt: "Exhibition Image",
  },
  {
    title: "Showroom",
    description: "Kami merancang dan membangun pengaturan interior dan eksterior yang fungsional serta memukau secara visual untuk showroom anda.",
    images: [
      { src: showroom1Image, alt: "Showroom Image 1" },
      { src: showroom2Image, alt: "Showroom Image 2" },
    ],
  },
  {
    title: "Rack Sliding",
    description: "Optimalkan kebutuhan penyimpanan dan display Anda dengan solusi rak kustom dari kami. Mulai dari rak sliding untuk efisiensi ruang hingga rak tile untuk supermarket dan gudang.",
    image: racksliding,
    alt: "RackSliding Image",
  },
  {
    title: "Interior",
    description: "Solusi interior kustom untuk berbagai kebutuhan rumah, termasuk kitchen set, ruang tamu, ruang rapat, dan elemen dekoratif.",
    image: interior,
    alt: "Interior Image",
  },
  {
    title: "Exterior",
    description: "Solusi eksterior yang tahan lama untuk rumah, serta lapangan luar dan dalam ruangan, dengan menawarkan kualitas yang tinggi dan instalasi dekoratif.",
    images: [
      { src: exterior1Image, alt: "Exterior Image 1" },
      { src: exterior2Image, alt: "Exterior Image 2" },
    ],
  },
  {
    title: "Acrylic & Digital Printing",
    description: "Solusi cetak akrilik dan digital printing kustom untuk papan nama, display promosi, dan item dekoratif yang dipersonalisasi.",
    image: acrylicdigitalprinting,
    alt: "Acrylic & Digital Printing Image",
  },
];
---

<MainLayout
  title={pageTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "WebPage",
    "@id": "http://localhost:4321/contact",
    url: "http://localhost:4321/contact",
    name: "Services | Metalindo",
    description: "Don't hesitate to contact us. Let's collaborate and bring your vision to lifeâ€”because at Metalindo, your satisfaction is our priority.",
    isPartOf: {
      "@type": "WebSite",
      url: "http://localhost:4321",
      name: "Metalindo",
      description: "Kita menyediakan solusi untuk layanan pembuatan custom & modular berbasis metal, kayu, akrilik hingga printing untuk keperluan kegiatan event dan promosi.",
    },
    inLanguage: "en-US",
  }}
>
  <SubHeroSection title="Services" src={bg1} alt="Services" />

  {/* First part: Booth & Display, Showroom, Rack Sliding (indices 0-2) */}
<div class="mx-auto default-p pt-0 pb-8 z-10">
  {services.slice(0, 3).map((service, index) => (
    <section
      class={`service-section relative flex flex-col ${
        index % 2 === 0 ? "md:flex-row" : "md:flex-row-reverse"
      } items-center gap-8 ${index === 0 ? "mt-0 mb-12" : "my-12"} ${
        service.title === "Booth & Display" ? "with-bg" : ""
      }`}
    >
      {service.title === "Booth & Display" && (
        <div
          class="bg-container absolute top-0 bottom-0 left-1/2 -translate-x-1/2 w-screen overflow-hidden z-[-1]"
          aria-hidden="true"
        >
          <div
            class="bg-image absolute inset-0 bg-cover bg-center"
            style={`background-image: url(${bg1.src});`}
          ></div>
          <div class="absolute inset-0 bg-red-600 bg-opacity-80"></div>
        </div>
      )}
      {service.image && (
        <div class="w-full md:w-1/2 pt-8 md:pt-2">
          <Image
            src={service.image}
            alt={service.alt}
            class="rounded-md object-cover w-full h-64 md:h-80 max-md:pt-5"
          />
        </div>
      )}
      {service.images && (
        <div class="w-full md:w-1/2 flex flex-row gap-4">
          {service.images.map((img) => (
            <Image
              src={img.src}
              alt={img.alt}
              class="rounded-md object-cover w-1/2 h-64 md:h-80"
            />
          ))}
        </div>
      )}
      {/* Conditionally add the text-white class for "Booth & Display" */}
      <div class={`w-full md:w-1/2 flex flex-col gap-4 ${
        service.title === "Booth & Display" ? "text-white" : ""
      }`}>
        <h2 class="text-3xl md:text-4xl font-bold font-oswald">
          {service.title}
        </h2>
        <div class="w-1/4 border-b-4 border-red-600"></div>
        <p class="text-lg">{service.description}</p>
      </div>
    </section>
  ))}
</div>


  {/* GiveHelp section outside the container to ensure full width */}
  <GiveHelp />

  {/* Second part: Interior, Exterior, Acrylic & Digital Printing (indices 3-5) */}
  <div class="container mx-auto default-p pt-0 pb-8">
    {services.slice(3).map((service, index) => (
      <section
        class={`service-section relative flex flex-col ${
          (index + 3) % 2 === 0 ? "md:flex-row" : "md:flex-row-reverse"
        } items-center gap-8 my-12`}
      >
        {service.image && (
          <div class="w-full md:w-1/2">
            <Image
              src={service.image}
              alt={service.alt}
              class="rounded-md object-cover w-full h-64 md:h-80"
            />
          </div>
        )}
        {service.images && (
          <div class="w-full md:w-1/2 flex flex-row gap-4">
            {service.images.map((img) => (
              <Image
                src={img.src}
                alt={img.alt}
                class="rounded-md object-cover w-1/2 h-64 md:h-80"
              />
            ))}
          </div>
        )}
        <div class="w-full md:w-1/2 flex flex-col gap-4">
          <h2 class="text-3xl md:text-4xl font-bold font-oswald">
            {service.title}
          </h2>
          <div class="w-1/4 border-b-4 border-red-600"></div>
          <p class="text-lg">{service.description}</p>
        </div>
      </section>
    ))}
  </div>
</MainLayout>

<style>
  .container {
    max-width: 1200px;
  }

  .service-section {
    opacity: 1; /* Start fully visible to avoid flicker */
    transition: opacity 0.5s ease-in;
  }

  .with-bg {
    position: relative;
    padding-top: 4rem;
    padding-bottom: 4rem;
  }

  .bg-container {
    height: 100%;
    overflow: hidden; /* Prevent overflow */
  }

  .bg-image {
    width: 100%;
    height: 125%;
    will-change: transform; /* Optimize for animation */
  }

  @media (max-width: 768px) {
    .service-section {
      flex-direction: column !important;
    }

    .service-section img {
      height: 200px;
    }

    .with-bg {
      padding-top: 2rem;
      padding-bottom: 2rem;
    }

    h2 {
      font-size: 2rem;
    }

    p {
      font-size: 1rem;
    }
  }

  @media (max-width: 480px) {
    .service-section img {
      height: 150px;
    }

    .with-bg {
      padding-top: 1.5rem;
      padding-bottom: 1.5rem;
    }

    .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  // Wait for everything to load properly
  document.addEventListener("DOMContentLoaded", () => {
    // Create a small delay to ensure everything is rendered
    setTimeout(() => {
      // Re-enable the fade-in animations, but with smoother settings
      gsap.utils.toArray(".service-section").forEach((section) => {
        const element = section as HTMLElement; // Explicitly cast to HTMLElement
        gsap.fromTo(
          element,
          { 
            opacity: 0,
            y: 30 // Reduced from 50 for subtler animation
          },
          {
            opacity: 1,
            y: 0,
            duration: 0.8, // Shorter duration for smoother feel
            ease: "power2.out", // Smoother easing
            scrollTrigger: {
              trigger: element,
              start: "top 85%", // Start earlier
              toggleActions: "play none none none" // Don't reverse on scroll up
            }
          }
        );
      });

      // Smoother parallax for background images
      gsap.utils.toArray(".bg-container").forEach((container) => {
        const bgImage = (container as HTMLElement).querySelector(".bg-image");
        if (bgImage) {
          gsap.fromTo(
            bgImage,
            { y: 0 },
            {
              y: "-10%",
              ease: "none",
              scrollTrigger: {
                trigger: ((container as HTMLElement).closest('.with-bg') as HTMLElement) || container,
                start: "top bottom",
                end: "bottom top",
                scrub: 0.5, // Smoother scrub with slight delay
                invalidateOnRefresh: true // Recalculate on resize
              }
            }
          );
        }
      });

      // Clear any ScrollTriggers that might be causing issues
      ScrollTrigger.refresh();
    }, 100);
  });
</script>