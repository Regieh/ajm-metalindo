---
const { title, subTitle, partners } = Astro.props;
import { Image } from "astro:assets";

// Import images (Astro does not support dynamic imports)
import strabag from "@images/client/strabag.png";

// Map image names to imported assets
const iconMap = {
  "strabag.png": strabag,
} as const;

// Define TypeScript interface for props
interface Partner {
  icon: string;
  name?: string;
  href?: string;
}

interface Props {
  title: string;
  subTitle?: string;
  partners: Partner[];
}
---

<!-- Swiper.js CDN -->
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
/>
<script defer src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full">
  <!-- Title and description -->
  <div class="mx-auto mb-6 w-full space-y-1 text-center sm:w-1/2 lg:w-3/2">
    <h2 class="text-balance uppercase font-oswald text-2xl font-bold leading-tight text-neutral-800 dark:text-neutral-200 sm:text-3xl">
      {title}
    </h2>
    {
      subTitle && (
        <p class="text-pretty leading-tight text-sm text-neutral-400">
          {subTitle}
        </p>
      )
    }
  </div>

  <!-- Swiper Carousel -->
  <div class="relative">
    <div class="swiper mySwiper">
      <div class="swiper-wrapper">
        {partners.map((partner) => {
          const iconSrc = iconMap[partner.icon as keyof typeof iconMap];

          return (
            iconSrc ? (
              <div class="swiper-slide flex justify-center w-auto px-4">
                <a href={partner.href || "#"} class="flex items-center">
                  <Image
                    src={iconSrc}
                    alt={`${partner.name} logo`}
                    class="h-12 w-auto"
                  />
                </a>
              </div>
            ) : null
          );
        })}
      </div>
    </div>
  </div>
</section>

<!-- Initialize Swiper -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const SwiperInstance = (window as any).Swiper; // Fix TypeScript error

    if (SwiperInstance) {
      new SwiperInstance(".mySwiper", {
        slidesPerView: 2, // Auto adjusts number of slides
        spaceBetween: 30, // Spacing between slides
        loop: true, // Infinite loop
        freeMode: true, // Enables smooth scrolling without snapping
        speed: 4000, // Slow, smooth scrolling speed
        freeModeMomentum: false, // Prevents momentum jumps
        autoplay: {
          delay: 0, // No delays, smooth scrolling
          disableOnInteraction: false, // Keeps scrolling even after user interaction
        },
        grabCursor: true, // Show hand cursor on hover

        breakpoints: {
          640: { slidesPerView: 3, spaceBetween: 20 },  // Tablets
          768: { slidesPerView: 4, spaceBetween: 30 },  // Small laptops
          1024: { slidesPerView: 5, spaceBetween: 40 }, // Desktops
          1280: { slidesPerView: 7, spaceBetween: 50 }, // Large screens
        },
      });
    }
  });
</script>
