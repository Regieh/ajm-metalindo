---
const { url, name, dropdown } = Astro.props;
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

const currentPath = Astro.url.pathname; // Get current page path

// Fetch projects for dropdown
const projects: CollectionEntry<"projects">[] = (
  await getCollection("projects", ({ id }) => id.startsWith("en/"))
).sort((a, b) => a.data.main.id - b.data.main.id);

// Check if the current page is inside the `/projects/*` section
const isActive = currentPath.startsWith("/projects");
---

<!-- Navigation Item -->
<div class="dropdown-container">
  <button
    id={url === "/" ? "home" : url.replace("/", "")}
    data-dropdown-toggle
    class={`navlink rounded-lg text-base font-medium outline-none ring-zinc-500 hover:text-neutral-300 focus-visible:ring dark:ring-zinc-200 dark:hover:text-neutral-300 dark:focus:outline-none md:py-3 md:text-sm 2xl:text-base transition ${
      isActive ? "text-redP font-bold underline underline-offset-8" : "text-white"
    }`}
    aria-haspopup="true"
    aria-expanded="false"
  >
    {name}
  </button>

  {dropdown && (
    <div id="dropdown" class="hidden">
      {projects.map((project) => (
        <a
          href={`/projects/${project.data.tabName.toLowerCase()}`}
          class={`block px-4 py-2 text-sm transition ${
            currentPath.includes(project.data.tabName.toLowerCase())
              ? "bg-redP text-white"
              : "text-white"
          } hover:bg-redP hover:text-white`}
        >
          {project.data.title}
        </a>
      ))}
    </div>
  )}
</div>